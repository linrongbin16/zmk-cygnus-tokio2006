/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define SCROLLER 1
#define MOUSE 4

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    macros {
        dongle_bootload_macro: dongle_bootload_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
            label = "DONGLE_BOOTLOAD_MACRO";
        };

        mo_macro: mo_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "MO_MACRO";
        };

        tap2_macro: tap2_macro {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>;

            label = "TAP2_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 15>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 27>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <32 31>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <15 16>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <20 19>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <16 17>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <28 29>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <18 19>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <30 31>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        bootloader {
            bindings = <&dongle_bootload_macro>;
            key-positions = <43 36 41>;
            require-prior-idle-ms = <125>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 23 22 21 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        mo1: mo_layer13 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER13";
            #binding-cells = <0>;
            bindings = <&mo_macro 1>, <&to 3>;

            tapping-term-ms = <125>;
        };

        mo2: mo_layer24 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER24";
            #binding-cells = <0>;
            bindings = <&mo_macro 2>, <&to 0>;

            tapping-term-ms = <125>;
        };

        mo3: mo_layer3 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER3";
            #binding-cells = <0>;
            bindings = <&mo_macro 3>, <&to 3>;

            tapping-term-ms = <125>;
        };

        mo4: mo_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER4";
            #binding-cells = <0>;
            bindings = <&mo_macro 0>, <&to 0>;

            tapping-term-ms = <125>;
        };

        hmlf: homerow_mods_left_f {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_F";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <105>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        hmrj: homerow_mods_right_j {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_J";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <105>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwer {
            bindings = <
&kp TAB         &kp Q      &kp W         &kp E               &kp R            &kp T                           &kp Y               &kp U  &kp I  &kp O                &kp P                 &none
&none           &none      &kp ESC       &kp A               &hml LEFT_GUI S  &hml LEFT_CONTROL D             &hmlf LEFT_SHIFT F  &kp G  &kp H  &hmrj RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_GUI L
&as COLON SEMI  &kp ENTER  &kp CAPSLOCK  &kp Z               &kp X            &kp C                           &kp V               &kp B  &kp N  &kp M                &as LESS_THAN COMMA   &as GREATER_THAN DOT
                                         &as QUESTION SLASH  &kp RIGHT_ALT    &as DOUBLE_QUOTES SINGLE_QUOTE  &kp SPACE           &mo 1  &mo 2
            >;

            label = "Qwer";
        };

        Num {
            bindings = <
&kp GRAVE     &none   &kp HOME  &kp UP_ARROW  &kp END                 &kp PAGE_UP                 &msc SCRL_UP              &tap2_macro LESS_THAN MINUS  &tap2_macro MINUS GREATER_THAN  &tap2_macro EQUAL GREATER_THAN  &none                           &none
&none         &none   &trans    &kp NUMBER_1  &hml LEFT_GUI NUMBER_2  &hml LEFT_CONTROL NUMBER_3  &hml LEFT_SHIFT NUMBER_4  &kp NUMBER_5                 &kp NUMBER_6                    &hmr RIGHT_SHIFT NUMBER_7       &hmr RIGHT_CONTROL NUMBER_8     &hmr RIGHT_GUI NUMBER_9
&kp NUMBER_0  &trans  &trans    &none         &kp LEFT_ARROW          &kp DOWN_ARROW              &kp RIGHT_ARROW           &kp PAGE_DOWN                &msc SCRL_DOWN                  &tap2_macro LESS_THAN EQUAL     &tap2_macro GREATER_THAN EQUAL  &tap2_macro EXCLAMATION EQUAL
                                &none         &trans                  &trans                      &trans                    &to 3                        &to 3
            >;

            label = "Num";
        };

        Sym {
            bindings = <
&kp TILDE              &none   &kp HOME  &kp UP_ARROW     &kp END                &kp PAGE_UP             &msc SCRL_UP            &tap2_macro LESS_THAN MINUS  &tap2_macro MINUS GREATER_THAN  &tap2_macro EQUAL GREATER_THAN  &none                           &none
&none                  &none   &trans    &kp EXCLAMATION  &hml LEFT_GUI AT_SIGN  &hml LEFT_CONTROL HASH  &hml LEFT_SHIFT DOLLAR  &kp PERCENT                  &kp CARET                       &hmr RIGHT_SHIFT AMPERSAND      &hmr RIGHT_CONTROL ASTERISK     &hmr RIGHT_GUI LEFT_PARENTHESIS
&kp RIGHT_PARENTHESIS  &trans  &trans    &none            &kp LEFT_ARROW         &kp DOWN_ARROW          &kp RIGHT_ARROW         &kp PAGE_DOWN                &msc SCRL_DOWN                  &tap2_macro LESS_THAN EQUAL     &tap2_macro GREATER_THAN EQUAL  &tap2_macro EXCLAMATION EQUAL
                                         &none            &trans                 &trans                  &trans                  &to 3                        &to 3
            >;

            label = "Sym";
        };

        Fun {
            bindings = <
&none    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none         &none             &kp C_PLAY_PAUSE      &kp C_PREVIOUS      &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN    &kp C_VOLUME_UP        &none
&none    &none                 &trans                &kp F1        &hml LEFT_GUI F2  &hml LEFT_CONTROL F3  &hml LEFT_SHIFT F4  &kp F5      &kp F6      &hmr RIGHT_SHIFT F7  &hmr RIGHT_CONTROL F8  &hmr RIGHT_GUI F9
&kp F10  &trans                &trans                &bt BT_CLR    &bt BT_PRV        &bt BT_NXT            &none               &kp F11     &kp F12     &none                &none                  &none
                                                     &out OUT_TOG  &trans            &none                 &none               &to 0       &to 0
            >;

            label = "Fun";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
