/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define SCROLLER 1
#define MOUSE 4

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    macros {
        dongle_bootload_macro: bootload_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
            label = "BOOTLOAD_MACRO";
        };

        mo_macro: mo_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "MO_MACRO";
        };

        tap2_macro: tap2_macro {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>;

            label = "TAP2_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 29>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <34 35>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <16 17>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <30 29>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <34 33>;
            timeout-ms = <42>;
            require-prior-idle-ms = <125>;
        };
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <95>;
            flavor = "balanced";
            hold-trigger-key-positions = <21 22 23 24 20 25 11 10 9 8 7 6 32 33 35 34 36 37>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <95>;
            flavor = "balanced";
            hold-trigger-key-positions = <15 16 17 18 0 1 2 3 4 5 19 31 30 29 28 27 26 14>;
            hold-trigger-on-release;
        };

        mo1: mo_layer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER1";
            #binding-cells = <0>;
            bindings = <&mo_macro 1>, <&to 1>;

            tapping-term-ms = <125>;
        };

        mo2: mo_layer2 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER2";
            #binding-cells = <0>;
            bindings = <&mo_macro 2>, <&to 2>;

            tapping-term-ms = <125>;
        };

        mo3: mo_layer3 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER3";
            #binding-cells = <0>;
            bindings = <&mo_macro 3>, <&to 3>;

            tapping-term-ms = <125>;
        };

        mo4: mo_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_LAYER4";
            #binding-cells = <0>;
            bindings = <&mo_macro 0>, <&to 0>;

            tapping-term-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwer {
            bindings = <
&kp TAB       &kp Q            &kp W            &kp E                           &kp R              &kp T  &kp Y  &kp U               &kp I                 &kp O                 &kp P                &none      &none  &none
&kp ESC       &hml LEFT_ALT A  &hml LEFT_GUI S  &hml LEFT_CONTROL D             &hml LEFT_SHIFT F  &kp G  &kp H  &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_GUI L      &hmr RIGHT_ALT SEMI  &kp ENTER
&kp CAPSLOCK  &kp Z            &kp X            &kp C                           &kp V              &kp B  &kp N  &kp M               &as LESS_THAN COMMA   &as GREATER_THAN DOT  &as QUESTION SLASH   &to 3
                                                &as DOUBLE_QUOTES SINGLE_QUOTE  &kp SPACE          &mo1   &mo2   &kp BACKSPACE       &as PIPE BACKSLASH
            >;

            label = "Qwer";
        };

        Num {
            bindings = <
&kp GRAVE  &kp PAGE_UP             &kp HOME                &kp UP_ARROW                &kp END                   &kp UNDERSCORE        &kp PLUS        &none                        &tap2_macro LESS_THAN MINUS     &tap2_macro MINUS GREATER_THAN  &none                    &none      &none  &none
&kp ESC    &hml LEFT_ALT NUMBER_1  &hml LEFT_GUI NUMBER_2  &hml LEFT_CONTROL NUMBER_3  &hml LEFT_SHIFT NUMBER_4  &kp NUMBER_5          &kp NUMBER_6    &hmr RIGHT_SHIFT NUMBER_7    &hmr RIGHT_CONTROL NUMBER_8     &hmr RIGHT_GUI NUMBER_9         &hmr RIGHT_ALT NUMBER_0  &kp ENTER
&none      &kp PAGE_DOWN           &kp LEFT_ARROW          &kp DOWN_ARROW              &kp RIGHT_ARROW           &as UNDERSCORE MINUS  &as PLUS EQUAL  &tap2_macro LESS_THAN EQUAL  &tap2_macro GREATER_THAN EQUAL  &tap2_macro EXCLAMATION EQUAL   &none                    &to 0
                                                           &none                       &trans                    &to 0                 &to 0           &trans                       &none
            >;

            label = "Num";
        };

        Sym {
            bindings = <
&kp TILDE  &kp PAGE_UP                &kp HOME               &kp UP_ARROW            &kp END                 &kp UNDERSCORE        &kp PLUS        &none                        &tap2_macro LESS_THAN MINUS     &tap2_macro MINUS GREATER_THAN   &none                             &none      &none  &none
&kp ESC    &hml LEFT_ALT EXCLAMATION  &hml LEFT_GUI AT_SIGN  &hml LEFT_CONTROL HASH  &hml LEFT_SHIFT DOLLAR  &kp PERCENT           &kp CARET       &hmr RIGHT_SHIFT AMPERSAND   &hmr RIGHT_CONTROL ASTERISK     &hmr RIGHT_GUI LEFT_PARENTHESIS  &hmr RIGHT_ALT RIGHT_PARENTHESIS  &kp ENTER
&none      &kp PAGE_DOWN              &kp LEFT_ARROW         &kp DOWN_ARROW          &kp RIGHT_ARROW         &as UNDERSCORE MINUS  &as PLUS EQUAL  &tap2_macro LESS_THAN EQUAL  &tap2_macro GREATER_THAN EQUAL  &tap2_macro EXCLAMATION EQUAL    &none                             &to 0
                                                             &none                   &trans                  &to 0                 &to 0           &trans                       &none
            >;

            label = "Sym";
        };

        Fun {
            bindings = <
&none    &kp F1            &kp F2            &kp F3                &kp F4              &none  &kp KP_DOT       &kp KP_N7               &kp KP_N8                 &kp KP_N9             &kp KP_PLUS                 &kp KP_MINUS   &none  &none
&kp ESC  &hml LEFT_ALT F5  &hml LEFT_GUI F6  &hml LEFT_CONTROL F7  &hml LEFT_SHIFT F8  &none  &none            &hmr RIGHT_SHIFT KP_N4  &hmr RIGHT_CONTROL KP_N5  &hmr RIGHT_GUI KP_N6  &hmr RIGHT_ALT KP_MULTIPLY  &kp KP_DIVIDE
&none    &kp F9            &kp F10           &kp F11               &kp F12             &none  &kp KP_NUMBER_0  &kp KP_N1               &kp KP_N2                 &kp KP_N3             &kp KP_EQUAL                &to 0
                                             &none                 &trans              &to 0  &to 0            &trans                  &none
            >;

            label = "Fun";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
